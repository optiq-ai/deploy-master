version: '3.8'

x-default-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

services:
  # Orkiestrator - serwis do uploadu i deployu
  orchestrator:
    image: node:16
    container_name: deploy-orchestrator
    restart: unless-stopped
    ports:
      - "4000:4000"
    volumes:
      - ./orchestrator:/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - deploy-network
    logging: *default-logging
    working_dir: /app
    command: >
      bash -c "cd /app && 
      chmod +x /app/init.sh &&
      /app/init.sh"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orchestrator.rule=Host(`orchestrator.localhost`)"
      - "traefik.http.routers.orchestrator.entrypoints=web"
      - "traefik.http.services.orchestrator.loadbalancer.server.port=4000"

  # Ruchownik - Traefik jako reverse proxy
  traefik:
    image: traefik:v2.6
    container_name: deploy-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic
      - traefik-acme:/etc/traefik/acme
    networks:
      - deploy-network
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"

  # Baza danych - PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: deploy-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_DB=appdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - deploy-network
    logging: *default-logging

  # Cache - Redis
  redis:
    image: redis:alpine
    container_name: deploy-redis
    restart: unless-stopped
    command: redis-server --requirepass redispassword
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - deploy-network
    logging: *default-logging

  # NarzÄ™dzia mail - MailHog
  mailhog:
    image: mailhog/mailhog
    container_name: deploy-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - deploy-network
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mail.localhost`)"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

networks:
  deploy-network:
    name: deploy-network

volumes:
  traefik-acme:
  postgres-data:
  redis-data:
